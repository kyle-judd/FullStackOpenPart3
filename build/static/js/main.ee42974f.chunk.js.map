{"version":3,"sources":["services/phonebook.js","components/Form.js","components/Filter.js","components/Person.js","components/Persons.js","components/Notifcation.js","App.js","index.js"],"names":["baseUrl","methods","getAll","axios","get","then","res","data","createPerson","newPerson","post","updatePerson","id","put","deletePerson","delete","Form","submitHandler","handleNameChange","handlePhoneNumberChange","onSubmit","onChange","type","Filter","onQueryChangeHandler","Person","person","eventHandler","name","number","onClick","Persons","persons","query","click","filteredPeople","filter","toLowerCase","includes","map","Notificaiton","message","style","width","height","backgroundColor","color","border","content","App","useState","setPersons","setNewPerson","setQuery","setMessage","fetchAllAndSet","phonebookService","returnedPersons","useEffect","event","target","value","preventDefault","foundPerson","find","window","confirm","catch","err","setTimeout","error","newPersonDTO","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee42974f.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl).then((res) => res.data);\n};\n\nconst createPerson = (newPerson) => {\n  return axios.post(baseUrl, newPerson).then((res) => res.data);\n};\n\nconst updatePerson = (id, newPerson) => {\n  return axios.put(`${baseUrl}/${id}`, newPerson).then((res) => {\n    return res.data;\n  });\n};\n\nconst deletePerson = (id) => {\n  return axios.delete(`${baseUrl}/${id}`).then((res) => {\n    return res.data;\n  });\n};\n\nconst methods = { getAll, createPerson, updatePerson, deletePerson };\n\nexport default methods;\n","import React from \"react\";\n\nconst Form = ({ submitHandler, handleNameChange, handlePhoneNumberChange }) => (\n  <form onSubmit={submitHandler}>\n    <div>\n      name: <input onChange={handleNameChange} />\n    </div>\n    <div>\n      number: <input onChange={handlePhoneNumberChange} />\n    </div>\n    <div>\n      <button type='submit'>add</button>\n    </div>\n  </form>\n);\n\nexport default Form;\n","import React from \"react\";\n\nconst Filter = ({ onQueryChangeHandler }) => (\n  <div>\n    filter shown with: <input onChange={onQueryChangeHandler} />\n  </div>\n);\n\nexport default Filter;\n","import React from \"react\";\n\nconst Person = ({ person, eventHandler }) => (\n  <div>\n    <p>\n      <strong>{person.name}</strong>\n    </p>\n    <p>{person.number}</p>\n    <button onClick={() => eventHandler(person)}>Delete Entry</button>\n  </div>\n);\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./Person\";\n\nconst Persons = ({ persons, query, click }) => {\n  const filteredPeople = persons.filter((person) =>\n    person.name.toLowerCase().includes(query.toLowerCase())\n  );\n  return (\n    <div>\n      {filteredPeople.map((person) => (\n        <Person key={person.id} person={person} eventHandler={click} />\n      ))}\n    </div>\n  );\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst Notificaiton = ({ message }) => {\n  const errorStyle = {\n    width: 200,\n    height: 50,\n    backgroundColor: \"red\",\n    color: \"black\",\n    border: \"1px solid black\",\n  };\n\n  const successStyle = {\n    width: 200,\n    height: 50,\n    backgroundColor: \"green\",\n    color: \"black\",\n    border: \"1px solid black\",\n  };\n\n  return message.type === null ? null : (\n    <div style={message.type === \"success\" ? successStyle : errorStyle}>\n      {message.content}\n    </div>\n  );\n};\n\nexport default Notificaiton;\n","import React, { useState, useEffect } from \"react\";\nimport phonebookService from \"./services/phonebook\";\nimport Form from \"./components/Form\";\nimport Filter from \"./components/Filter\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notifcation\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newPerson, setNewPerson] = useState({});\n  const [query, setQuery] = useState(\"\");\n  const [message, setMessage] = useState({ type: null, content: null });\n\n  const fetchAllAndSet = () =>\n    phonebookService\n      .getAll()\n      .then((returnedPersons) => setPersons(returnedPersons));\n\n  useEffect(() => {\n    fetchAllAndSet();\n  }, []);\n\n  const onNameChangeHandler = (event) => {\n    const newPersonDTO = { ...newPerson, name: event.target.value };\n    setNewPerson(newPersonDTO);\n  };\n\n  const onPhoneNumberChangeHandler = (event) => {\n    const newPersonDTO = { ...newPerson, number: event.target.value };\n    setNewPerson(newPersonDTO);\n  };\n\n  const deletePersonHandler = (person) => {\n    if (window.confirm(`Are you sure you want to delete ${person.name}?`)) {\n      phonebookService\n        .deletePerson(person.id)\n        .then(fetchAllAndSet)\n        .catch((err) => setMessage({ type: \"error\", content: err }));\n    }\n  };\n\n  const updatePerson = (person) => {\n    if (\n      window.confirm(\n        `${person.name} is already added to the phonebook. This will update their number. Are you sure?`\n      )\n    ) {\n      phonebookService\n        .updatePerson(person.id, newPerson)\n        .then(fetchAllAndSet)\n        .catch((err) => setMessage({ type: \"error\", content: err }));\n    }\n  };\n\n  const createNewPerson = () => {\n    phonebookService\n      .createPerson(newPerson)\n      .then(() => {\n        fetchAllAndSet();\n        setMessage({\n          type: \"success\",\n          content: `Successfully added ${newPerson.name}`,\n        });\n        setTimeout(() => {\n          setMessage({ type: null, content: null });\n        }, 3000);\n        setNewPerson({});\n      })\n      .catch((error) =>\n        setMessage({ type: \"error\", content: \"Invalid length\" })\n      );\n  };\n\n  const onQueryChangeHandler = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    const foundPerson = persons.find(\n      (person) => person.name === newPerson.name\n    );\n    foundPerson ? updatePerson(foundPerson) : createNewPerson();\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter onQueryChangeHandler={onQueryChangeHandler} />\n      <h1>add a new</h1>\n      <Form\n        submitHandler={onSubmitHandler}\n        handleNameChange={onNameChangeHandler}\n        handlePhoneNumberChange={onPhoneNumberChangeHandler}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} query={query} click={deletePersonHandler} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}