{"version":3,"sources":["services/phonebook.js","components/Form.js","components/Filter.js","components/Persons.js","components/Notifcation.js","App.js","index.js"],"names":["baseUrl","methods","getAll","axios","get","then","res","data","createPerson","newPerson","post","updatePerson","id","put","console","log","deletePerson","delete","Form","submitHandler","handleNameChange","handlePhoneNumberChange","onSubmit","onChange","type","Filter","onQueryChangeHandler","Persons","persons","query","click","map","person","name","toLowerCase","includes","number","onClick","Notificaiton","message","style","width","height","backgroundColor","color","border","content","App","useState","setPersons","setNewPerson","setQuery","setMessage","useEffect","phonebookService","event","target","value","preventDefault","some","window","confirm","returnedPerson","updatedArr","p","concat","setTimeout","newPersonDTO","catch","err","filter","ReactDOM","render","document","getElementById"],"mappings":"wKACMA,EAAU,eA0BDC,EAFC,CAAEC,OAtBH,WACb,OAAOC,IAAMC,IAAIJ,GAASK,MAAK,SAACC,GAAD,OAASA,EAAIC,SAqBpBC,aAlBL,SAACC,GACpB,OAAON,IAAMO,KAAKV,EAASS,GAAWJ,MAAK,SAACC,GAAD,OAASA,EAAIC,SAiBlBI,aAdnB,SAACC,EAAIH,GACxB,OAAON,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAAWJ,MAAK,SAACC,GAEpD,OADAQ,QAAQC,IAAIT,GACLA,EAAIC,SAWuCS,aAPjC,SAACJ,GACpB,OAAOT,IAAMc,OAAN,UAAgBjB,EAAhB,YAA2BY,IAAMP,MAAK,SAACC,GAE5C,OADAQ,QAAQC,IAAIT,GACLA,EAAIC,U,OCLAW,EAdF,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,iBAAkBC,EAApC,EAAoCA,wBAApC,OACX,uBAAMC,SAAUH,EAAhB,UACE,yCACQ,uBAAOI,SAAUH,OAEzB,2CACU,uBAAOG,SAAUF,OAE3B,8BACE,wBAAQG,KAAK,SAAb,uBCHSC,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,qBAAH,OACb,sDACqB,uBAAOH,SAAUG,QCmBzBC,EArBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,MAAnB,OACd,8BACGF,EAAQG,KAAI,SAACC,GACZ,OACEA,EAAOC,KAAKC,cAAcC,SAASN,EAAMK,gBAC/B,KAAVL,EAGE,gCACE,8BACGG,EAAOC,KADV,IACiBD,EAAOI,UAExB,wBAAQC,QAAS,kBAAMP,EAAME,IAA7B,sBAJQA,EAAOpB,IAQd,WCQE0B,EAxBM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAiBtB,OAAwB,OAAjBA,EAAQf,KAAgB,KAC7B,qBAAKgB,MAAwB,YAAjBD,EAAQf,KATD,CACnBiB,MAAO,IACPC,OAAQ,GACRC,gBAAiB,QACjBC,MAAO,QACPC,OAAQ,mBAbS,CACjBJ,MAAO,IACPC,OAAQ,GACRC,gBAAiB,MACjBC,MAAO,QACPC,OAAQ,mBAYR,SACGN,EAAQO,WCqFAC,EAnGH,WACV,MAA8BC,mBAAS,IAAvC,mBAAOpB,EAAP,KAAgBqB,EAAhB,KACA,EAAkCD,mBAAS,IAA3C,mBAAOvC,EAAP,KAAkByC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOnB,EAAP,KAAcsB,EAAd,KACA,EAA8BH,mBAAS,CAAExB,KAAM,KAAMsB,QAAS,OAA9D,mBAAOP,EAAP,KAAgBa,EAAhB,KAEAC,qBACE,kBAAMC,EAAiBpD,SAASG,MAAK,SAACuB,GAAD,OAAaqB,EAAWrB,QAC7D,IA0EF,OACE,gCACE,2CACA,cAAC,EAAD,CAAcW,QAASA,IACvB,cAAC,EAAD,CAAQb,qBAtBiB,SAAC6B,GAC5BJ,EAASI,EAAMC,OAAOC,UAsBpB,2CACA,cAAC,EAAD,CACEtC,cArBkB,SAACoC,GACvBA,EAAMG,iBAEJ9B,EAAQ+B,MAAK,SAAC3B,GACRA,EAAOC,OAASxB,EAAUwB,MAxCf,SAACD,GAElB4B,OAAOC,QAAP,UACK7B,EAAOC,KADZ,sFAIAqB,EACG3C,aAAaqB,EAAOpB,GAAIH,GACxBJ,MAAK,SAACyD,GACL,IAAMC,EAAanC,EAAQG,KAAI,SAACiC,GAAD,OAC7BA,EAAEpD,KAAOoB,EAAOpB,GAAKoD,EAAIF,KAE3BhD,QAAQC,IAAIgD,GACZd,EAAWc,MA4BXpD,CAAaqB,OAtBnBsB,EAAiB9C,aAAaC,GAAWJ,MAAK,SAACI,GAC7CwC,EAAWrB,EAAQqC,OAAOxD,IAC1B2C,EAAW,CACT5B,KAAM,UACNsB,QAAQ,sBAAD,OAAwBrC,EAAUwB,QAE3CiC,YAAW,WACTd,EAAW,CAAE5B,KAAM,KAAMsB,QAAS,SACjC,KACHI,EAAa,QA8BX9B,iBA/EsB,SAACmC,GAC3B,IAAMY,EAAY,2BAAQ1D,GAAR,IAAmBwB,KAAMsB,EAAMC,OAAOC,QACxD3C,QAAQC,IAAIoD,GACZjB,EAAaiB,IA6ET9C,wBA1E6B,SAACkC,GAClC,IAAMY,EAAY,2BAAQ1D,GAAR,IAAmB2B,OAAQmB,EAAMC,OAAOC,QAC1D3C,QAAQC,IAAIoD,GACZjB,EAAaiB,MAyEX,yCACA,cAAC,EAAD,CAASvC,QAASA,EAASC,MAAOA,EAAOC,MAvEjB,SAACE,GACvB4B,OAAOC,QAAP,0CAAkD7B,EAAOC,KAAzD,QACFqB,EACGtC,aAAagB,EAAOpB,IACpBwD,OAAM,SAACC,GAAD,OAASjB,EAAW,CAAE5B,KAAM,QAASsB,QAASuB,OACvDpB,EAAWrB,EAAQ0C,QAAO,SAACN,GAAD,OAAOA,EAAEpD,KAAOoB,EAAOpB,eC/BvD2D,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.644d2af4.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl).then((res) => res.data);\n};\n\nconst createPerson = (newPerson) => {\n  return axios.post(baseUrl, newPerson).then((res) => res.data);\n};\n\nconst updatePerson = (id, newPerson) => {\n  return axios.put(`${baseUrl}/${id}`, newPerson).then((res) => {\n    console.log(res);\n    return res.data;\n  });\n};\n\nconst deletePerson = (id) => {\n  return axios.delete(`${baseUrl}/${id}`).then((res) => {\n    console.log(res);\n    return res.data;\n  });\n};\n\nconst methods = { getAll, createPerson, updatePerson, deletePerson };\n\nexport default methods;\n","import React from \"react\";\n\nconst Form = ({ submitHandler, handleNameChange, handlePhoneNumberChange }) => (\n  <form onSubmit={submitHandler}>\n    <div>\n      name: <input onChange={handleNameChange} />\n    </div>\n    <div>\n      number: <input onChange={handlePhoneNumberChange} />\n    </div>\n    <div>\n      <button type='submit'>add</button>\n    </div>\n  </form>\n);\n\nexport default Form;\n","import React from \"react\";\n\nconst Filter = ({ onQueryChangeHandler }) => (\n  <div>\n    filter shown with: <input onChange={onQueryChangeHandler} />\n  </div>\n);\n\nexport default Filter;\n","import React from \"react\";\n\nconst Persons = ({ persons, query, click }) => (\n  <div>\n    {persons.map((person) => {\n      if (\n        person.name.toLowerCase().includes(query.toLowerCase()) ||\n        query === \"\"\n      ) {\n        return (\n          <div key={person.id}>\n            <p>\n              {person.name} {person.number}\n            </p>\n            <button onClick={() => click(person)}>delete</button>\n          </div>\n        );\n      }\n      return null;\n    })}\n  </div>\n);\n\nexport default Persons;\n","import React from \"react\";\n\nconst Notificaiton = ({ message }) => {\n  const errorStyle = {\n    width: 200,\n    height: 50,\n    backgroundColor: \"red\",\n    color: \"black\",\n    border: \"1px solid black\",\n  };\n\n  const successStyle = {\n    width: 200,\n    height: 50,\n    backgroundColor: \"green\",\n    color: \"black\",\n    border: \"1px solid black\",\n  };\n\n  return message.type === null ? null : (\n    <div style={message.type === \"success\" ? successStyle : errorStyle}>\n      {message.content}\n    </div>\n  );\n};\n\nexport default Notificaiton;\n","import React, { useState, useEffect } from \"react\";\nimport phonebookService from \"./services/phonebook\";\nimport Form from \"./components/Form\";\nimport Filter from \"./components/Filter\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notifcation\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newPerson, setNewPerson] = useState({});\n  const [query, setQuery] = useState(\"\");\n  const [message, setMessage] = useState({ type: null, content: null });\n\n  useEffect(\n    () => phonebookService.getAll().then((persons) => setPersons(persons)),\n    []\n  );\n\n  const onNameChangeHandler = (event) => {\n    const newPersonDTO = { ...newPerson, name: event.target.value };\n    console.log(newPersonDTO);\n    setNewPerson(newPersonDTO);\n  };\n\n  const onPhoneNumberChangeHandler = (event) => {\n    const newPersonDTO = { ...newPerson, number: event.target.value };\n    console.log(newPersonDTO);\n    setNewPerson(newPersonDTO);\n  };\n\n  const deletePersonHandler = (person) => {\n    if (window.confirm(`Are you sure you want to delete ${person.name}?`)) {\n      phonebookService\n        .deletePerson(person.id)\n        .catch((err) => setMessage({ type: \"error\", content: err }));\n      setPersons(persons.filter((p) => p.id !== person.id));\n    }\n  };\n\n  const updatePerson = (person) => {\n    if (\n      window.confirm(\n        `${person.name} is already added to the phonebook. This will update their number. Are you sure?`\n      )\n    ) {\n      phonebookService\n        .updatePerson(person.id, newPerson)\n        .then((returnedPerson) => {\n          const updatedArr = persons.map((p) =>\n            p.id !== person.id ? p : returnedPerson\n          );\n          console.log(updatedArr);\n          setPersons(updatedArr);\n        });\n    }\n  };\n\n  const createNewPerson = () => {\n    phonebookService.createPerson(newPerson).then((newPerson) => {\n      setPersons(persons.concat(newPerson));\n      setMessage({\n        type: \"success\",\n        content: `Successfully added ${newPerson.name}`,\n      });\n      setTimeout(() => {\n        setMessage({ type: null, content: null });\n      }, 3000);\n      setNewPerson({});\n    });\n  };\n\n  const onQueryChangeHandler = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    if (\n      persons.some((person) => {\n        if (person.name === newPerson.name) {\n          updatePerson(person);\n        }\n      })\n    ) {\n    } else {\n      createNewPerson();\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter onQueryChangeHandler={onQueryChangeHandler} />\n      <h1>add a new</h1>\n      <Form\n        submitHandler={onSubmitHandler}\n        handleNameChange={onNameChangeHandler}\n        handlePhoneNumberChange={onPhoneNumberChangeHandler}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} query={query} click={deletePersonHandler} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}